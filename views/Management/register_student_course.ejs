<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>רישום תלמיד לקורס</title>
  <link rel="stylesheet" href="/css/Management/register_student_course.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
    }

    header {
      background-color: #4CAF50;
      color: white;
      text-align: center;
      padding: 1em 0;
      position: relative;
    }

    .back-button {
      position: absolute;
      top: 10px;
      left: 10px;
      background-color: white;
      color: #4CAF50;
      padding: 5px 10px;
      border-radius: 4px;
      text-decoration: none;
      font-weight: bold;
    }

    main {
      max-width: 800px;
      margin: 2em auto;
      padding: 2em;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1.5em;
    }

    label {
      font-weight: bold;
      display: block;
      margin-bottom: 0.5em;
    }

    select {
      width: 100%;
      padding: 0.75em;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1em;
    }

    select[multiple] {
      height: 200px;
    }

    button {
      background-color: #4CAF50;
      color: white;
      border: none;
      padding: 1em;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1em;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #45a049;
    }

    .result-container {
      margin-top: 2em;
      display: none;
    }

    .result-success {
      background-color: #e8f5e9;
      border-left: 4px solid #4CAF50;
      padding: 1em;
      margin-bottom: 1em;
      border-radius: 4px;
    }

    .result-error {
      background-color: #ffebee;
      border-left: 4px solid #f44336;
      padding: 1em;
      margin-bottom: 1em;
      border-radius: 4px;
    }

    .conflict-details {
      background-color: #fff8e1;
      padding: 1em;
      margin-top: 0.5em;
      border-radius: 4px;
    }

    .conflict-item {
      margin-bottom: 0.5em;
      padding-bottom: 0.5em;
      border-bottom: 1px solid #ffe0b2;
    }

    .conflict-item:last-child {
      border-bottom: none;
    }

    .student-list {
      list-style-type: none;
      padding: 0;
    }

    .student-item {
      padding: 0.5em 0;
      border-bottom: 1px solid #eee;
    }

    .student-item:last-child {
      border-bottom: none;
    }

    .student-name {
      font-weight: bold;
    }

    .student-email {
      color: #666;
      font-size: 0.9em;
    }
  </style>
</head>
<body>
  <header>
    <h1>רישום תלמיד לקורס</h1>
    <a href="/Management" class="back-button">חזרה</a>
  </header>
  <main>
    <form id="registerStudentCourseForm" action="/Management/register-student-course" method="post">
      <div>
        <label for="students">בחר תלמידים:</label>
        <select name="studentIds" id="students" multiple required>
          <% students.forEach(student => { %>
            <option value="<%= student.ID_ %>"><%= student.NAME_STUDENT %> - <%= student.email || 'אין אימייל' %></option>
          <% }); %>
        </select>
      </div>
      <div>
        <label for="course">בחר קורס:</label>
        <select name="courseId" id="course" required>
          <% courses.forEach(course => { %>
            <option value="<%= course.ID_COURSE %>"><%= course.Name_Course %></option>
          <% }); %>
        </select>
      </div>
      <button type="submit">רשום תלמידים</button>
    </form>

    <div id="resultContainer" class="result-container">
      <h2>תוצאות הרישום</h2>
      <div id="successResults"></div>
      <div id="errorResults"></div>
    </div>
  </main>
  <script>
    document.getElementById('registerStudentCourseForm').addEventListener('submit', async function(event) {
      event.preventDefault();
      const form = event.target;
      const formData = new FormData(form);
      
      // Handle multiple select
      const studentSelect = document.getElementById('students');
      const selectedStudents = Array.from(studentSelect.selectedOptions).map(option => option.value);
      
      // Create JSON data
      const jsonData = {
        courseId: formData.get('courseId'),
        studentIds: selectedStudents
      };

      try {
        const response = await fetch(form.action, {
          method: form.method,
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(jsonData)
        });

        if (response.ok) {
          const data = await response.json();
          displayResults(data, studentSelect);
        } else {
          const errorData = await response.json();
          alert(`הייתה בעיה ברישום התלמידים: ${errorData.error}`);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('הייתה בעיה ברישום התלמידים.');
      }
    });

    function displayResults(data, studentSelect) {
      const resultContainer = document.getElementById('resultContainer');
      const successResults = document.getElementById('successResults');
      const errorResults = document.getElementById('errorResults');
      
      // Clear previous results
      successResults.innerHTML = '';
      errorResults.innerHTML = '';
      
      // Process results
      const successfulRegistrations = data.results.filter(result => result.success);
      const failedRegistrations = data.results.filter(result => !result.success);
      
      // Display successful registrations
      if (successfulRegistrations.length > 0) {
        const successDiv = document.createElement('div');
        successDiv.className = 'result-success';
        
        const successTitle = document.createElement('h3');
        successTitle.textContent = `${successfulRegistrations.length} תלמידים נרשמו בהצלחה`;
        successDiv.appendChild(successTitle);
        
        const studentList = document.createElement('ul');
        studentList.className = 'student-list';
        
        successfulRegistrations.forEach(result => {
          const studentOption = Array.from(studentSelect.options).find(option => option.value === result.studentId.toString());
          if (studentOption) {
            const listItem = document.createElement('li');
            listItem.className = 'student-item';
            listItem.textContent = studentOption.textContent;
            studentList.appendChild(listItem);
          }
        });
        
        successDiv.appendChild(studentList);
        successResults.appendChild(successDiv);
      }
      
      // Display failed registrations
      if (failedRegistrations.length > 0) {
        const errorDiv = document.createElement('div');
        errorDiv.className = 'result-error';
        
        const errorTitle = document.createElement('h3');
        errorTitle.textContent = `${failedRegistrations.length} תלמידים לא נרשמו עקב חפיפות במערכת`;
        errorDiv.appendChild(errorTitle);
        
        failedRegistrations.forEach(result => {
          const studentOption = Array.from(studentSelect.options).find(option => option.value === result.studentId.toString());
          if (studentOption) {
            const conflictContainer = document.createElement('div');
            conflictContainer.className = 'conflict-details';
            
            const studentName = document.createElement('div');
            studentName.className = 'student-name';
            studentName.textContent = studentOption.textContent;
            conflictContainer.appendChild(studentName);
            
            const conflictTitle = document.createElement('p');
            conflictTitle.textContent = 'חפיפות שנמצאו:';
            conflictContainer.appendChild(conflictTitle);
            
            result.conflicts.forEach(conflict => {
              const conflictItem = document.createElement('div');
              conflictItem.className = 'conflict-item';
              
              const conflictDate = document.createElement('p');
              conflictDate.textContent = `תאריך: ${new Date(conflict.date).toLocaleDateString('he-IL')}`;
              conflictItem.appendChild(conflictDate);
              
              const existingCourse = document.createElement('p');
              existingCourse.textContent = `קורס קיים: ${conflict.existingCourse} (${conflict.existingTime})`;
              conflictItem.appendChild(existingCourse);
              
              const newTime = document.createElement('p');
              newTime.textContent = `זמן חדש: ${conflict.newTime}`;
              conflictItem.appendChild(newTime);
              
              conflictContainer.appendChild(conflictItem);
            });
            
            errorDiv.appendChild(conflictContainer);
          }
        });
        
        errorResults.appendChild(errorDiv);
      }
      
      // Show results container
      resultContainer.style.display = 'block';
    }
  </script>
</body>
</html>
